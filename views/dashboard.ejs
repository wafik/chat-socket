<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat Design Bootstrap</title>
    <link
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
    />

    <style>
      .chat-container {
        height: 70vh;
        overflow-y: auto;
        border: 1px solid #ddd;
        padding: 10px;
      }
      .user-list {
        height: 80vh;
        overflow-y: auto;
        border-right: 1px solid #ddd;
      }
      .chat-area {
        height: 80vh;
        overflow-y: auto;
      }
      .message {
        margin-bottom: 10px;
      }
      .timestamp-message {
        font-size: 10px;
        font-style: italic;
      }
      .message.user {
        text-align: right;
      }
      .message.receiver {
        text-align: left;
      }
      .message.user .message-content {
        background-color: #dcf8c6;
        border-radius: 15px;
        padding: 10px;
        display: inline-block;
        max-width: 70%;
      }
      .message.receiver .message-content {
        background-color: #f1f0f0;
        border-radius: 15px;
        padding: 10px;
        display: inline-block;
        max-width: 70%;
      }
      .input-area {
        border-top: 1px solid #ddd;
        padding: 10px;
      }
      .active {
        background-color: #e9ecef;
      }
      @media (max-width: 767px) {
        .user-list {
          order: 2;
        }
        .chat-area {
          order: 1;
        }
      }
    </style>
  </head>
  <body>
    <div class="container mt-5">
      <div class="row">
        <div class="col-md-4 user-list">
          <h5>Daftar Pengguna</h5>
          <ul class="list-group">
            <% users.forEach(user => { %>
            <li
              class="list-group-item user-item"
              data-user="<%= user.username %>"
            >
              <%= user.username %>
            </li>
            <% }); %>
          </ul>
        </div>
        <div class="col-md-8 chat-area">
          <div class="chat-header">
            <h5 id="chat-title">Pilih Pengguna</h5>
          </div>
          <div class="chat-container" id="chat-container">
            <!-- Pesan chat akan ditampilkan di sini -->
          </div>
          <div class="input-area">
            <div class="input-group">
              <input
                type="text"
                class="form-control"
                id="messageInput"
                placeholder="Tulis pesan..."
              />
              <div class="input-group-append">
                <button class="btn btn-primary" type="button" id="sendMessage">
                  Kirim
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script>
      let user = "<%= username %>";
      let receiver = null;

      const host = "<%= host %>"; // Pastikan host dikelilingi oleh petik
      const socket = io(host);
      socket.emit("setUsername", user);
      $(document).ready(function () {
        // Data chat untuk setiap pengguna
        const chatData = {
          "Pengguna 1": [
            { sender: "user", content: "Halo, bagaimana kabarmu?" },
            {
              sender: "receiver",
              content: "Saya baik, terima kasih! Bagaimana denganmu?",
            },
          ],
          "Pengguna 2": [
            { sender: "user", content: "Apa kabar?" },
            { sender: "receiver", content: "Saya baik, terima kasih!" },
          ],
          "Pengguna 3": [
            { sender: "user", content: "Halo!" },
            { sender: "receiver", content: "Halo juga!" },
          ],
          "Pengguna 4": [
            { sender: "user", content: "Apa kabar?" },
            { sender: "receiver", content: "Saya baik, terima kasih!" },
          ],
          "Pengguna 5": [
            { sender: "user", content: "Halo!" },
            { sender: "receiver", content: "Halo juga!" },
          ],
        };
        socket.on("newMessage", (msg) => {
          renderMessage(msg);
        });
        const fetchChatHistory = async () => {
          if (!user) return;

          try {
            const response = await fetch(
              `${host}/chat/history?sender=${user}&receiver=${receiver}`
            );
            if (!response.ok) {
              throw new Error("Failed to fetch chat history");
            }
            const messages = await response.json();
            const containerChat = $("#chat-container");
            containerChat.empty();
            messages.forEach((msg) => renderMessage(msg));
          } catch (error) {
            console.error("Error fetching chat history:", error);
            alert("Failed to fetch chat history");
          }
        };
        const renderMessage = (msg) => {
          const chatContainer = $("#chat-container");
          let className = "receiver";
          let innerHTML = "";
          if (msg.sender === user) {
            className = "user";
            innerHTML += `<button class="btn btn-danger btn-sm delete" data-id="${msg.messageId}">
                                  <i class="fas fa-trash-alt"></i>
                                </button>`;
          }
          chatContainer.append(`
                    <div id="message-${msg.messageId}" class="message message-${msg.messageId} ${className}">
                        <div class="message-content">
                            ${msg.message}
                        </div>
                        ${innerHTML}
                        <p class="timestamp-message">${msg.timestamp}</p>
                    </div>
                `);
          chatContainer.scrollTop(chatContainer.prop("scrollHeight"));
        };
        
        const messagesDiv = document.getElementById("chat-container");
        messagesDiv.addEventListener("click", (e) => {
          if (e.target.classList.contains("delete")) {
            console.log("halo");
            const messageId = e.target.dataset.id;
            console.log(messageId);
            socket.emit("deleteMessage", { messageId });
          }
        });
        $(".user-item").on("click", function () {
          // Hapus kelas 'active' dari semua item pengguna
          $(".user-item").removeClass("active");
          // Tambahkan kelas 'active' ke item pengguna yang diklik
          $(this).addClass("active");

          const user = $(this).data("user");
          receiver = user;
          $("#chat-title").text(`Chat dengan ${user}`);
          fetchChatHistory();
        });
        socket.on("messageDeleted", ({ messageId }) => {
          const messageEl = document.getElementById(`message-${messageId}`);
          if (messageEl) {
            messageEl.classList.add("deleted");
            messageEl.innerText = "This message has been deleted.";
          }
        });
        // Event listener untuk tombol kirim pesan
        $("#sendMessage").on("click", function () {
          const message = $("#messageInput").val().trim();
          if (message === "") return;
          socket.emit("sendMessage", {
            sender: user,
            receiver: receiver,
            message,
          });

          // Bersihkan input setelah pesan dikirim
          $("#messageInput").val("");

          // Scroll ke bawah ketika pesan baru ditambahkan
          chatContainer.scrollTop(chatContainer.prop("scrollHeight"));
        });

        // Event listener untuk enter di input pesan
        $("#messageInput").on("keypress", function (e) {
          if (e.which === 13) {
            $("#sendMessage").click();
          }
        });
      });
    </script>
  </body>
</html>
